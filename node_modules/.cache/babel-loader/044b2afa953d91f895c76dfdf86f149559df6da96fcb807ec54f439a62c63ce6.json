{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var createEventTargetConstructor = function createEventTargetConstructor(wrapEventListener) {\n  return /*#__PURE__*/function () {\n    function EventTarget(_nativeEventTarget) {\n      _classCallCheck(this, EventTarget);\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n    _createClass(EventTarget, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, listener, options) {\n        if (listener !== null) {\n          var wrappedEventListener = this._listeners.get(listener);\n          if (wrappedEventListener === undefined) {\n            wrappedEventListener = wrapEventListener(this, listener);\n            if (typeof listener === 'function') {\n              this._listeners.set(listener, wrappedEventListener);\n            }\n          }\n          this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        return this._nativeEventTarget.dispatchEvent(event);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, listener, options) {\n        var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n        this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n      }\n    }]);\n    return EventTarget;\n  }();\n};","map":{"version":3,"mappings":";;AAGA,OAAO,IAAMA,4BAA4B,GAAmC,SAA/DA,4BAA4B,CAAoCC,iBAAiB,EAAI;EAC9F;IAGI,qBAAoBC,kBAAsC;MAAA;MAAtC,uBAAkB,GAAlBA,kBAAkB;MAClC,IAAI,CAACC,UAAU,GAAG,IAAIC,OAAO,EAAE;IACnC;IAAC;MAAA;MAAA,OAEM,0BACHC,IAAY,EACZC,QAAyE,EACzEC,OAA2C;QAE3C,IAAID,QAAQ,KAAK,IAAI,EAAE;UACnB,IAAIE,oBAAoB,GAAG,IAAI,CAACL,UAAU,CAACM,GAAG,CAACH,QAAQ,CAAC;UAExD,IAAIE,oBAAoB,KAAKE,SAAS,EAAE;YACpCF,oBAAoB,GAAGP,iBAAiB,CAAC,IAAI,EAAEK,QAAQ,CAAC;YAExD,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;cAChC,IAAI,CAACH,UAAU,CAACQ,GAAG,CAACL,QAAQ,EAAEE,oBAAoB,CAAC;;;UAI3D,IAAI,CAACN,kBAAkB,CAACU,gBAAgB,CAACP,IAAI,EAAEG,oBAAoB,EAAED,OAAO,CAAC;;MAErF;IAAC;MAAA;MAAA,OAEM,uBAAcM,KAAY;QAC7B,OAAO,IAAI,CAACX,kBAAkB,CAACY,aAAa,CAACD,KAAK,CAAC;MACvD;IAAC;MAAA;MAAA,OAEM,6BACHR,IAAY,EACZC,QAAyE,EACzEC,OAAwC;QAExC,IAAMC,oBAAoB,GAAGF,QAAQ,KAAK,IAAI,GAAGI,SAAS,GAAG,IAAI,CAACP,UAAU,CAACM,GAAG,CAACH,QAAQ,CAAC;QAE1F,IAAI,CAACJ,kBAAkB,CAACa,mBAAmB,CAACV,IAAI,EAAEG,oBAAoB,KAAKE,SAAS,GAAG,IAAI,GAAGF,oBAAoB,EAAED,OAAO,CAAC;MAChI;IAAC;IAAA;EAAA;AAET,CAAC","names":["createEventTargetConstructor","wrapEventListener","_nativeEventTarget","_listeners","WeakMap","type","listener","options","wrappedEventListener","get","undefined","set","addEventListener","event","dispatchEvent","removeEventListener"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\event-target-constructor.ts"],"sourcesContent":["import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
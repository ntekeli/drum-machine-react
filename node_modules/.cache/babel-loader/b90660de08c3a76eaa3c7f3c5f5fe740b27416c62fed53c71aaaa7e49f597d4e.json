{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport var Vibrato = /*#__PURE__*/function (_Effect) {\n  _inherits(Vibrato, _Effect);\n  var _super = _createSuper(Vibrato);\n  function Vibrato() {\n    var _this;\n    _classCallCheck(this, Vibrato);\n    _this = _super.call(this, optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n    _this.name = \"Vibrato\";\n    var options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    _this._lfo = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n    }).start().connect(_this._delayNode.delayTime);\n    _this.frequency = _this._lfo.frequency;\n    _this.depth = _this._lfo.amplitude;\n    _this.depth.value = options.depth;\n    readOnly(_assertThisInitialized(_this), [\"frequency\", \"depth\"]);\n    _this.effectSend.chain(_this._delayNode, _this.effectReturn);\n    return _this;\n  }\n  _createClass(Vibrato, [{\n    key: \"type\",\n    get:\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    function get() {\n      return this._lfo.type;\n    },\n    set: function set(type) {\n      this._lfo.type = type;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Vibrato.prototype), \"dispose\", this).call(this);\n      this._delayNode.dispose();\n      this._lfo.dispose();\n      this.frequency.dispose();\n      this.depth.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Effect.getDefaults(), {\n        maxDelay: 0.005,\n        frequency: 5,\n        depth: 0.1,\n        type: \"sine\"\n      });\n    }\n  }]);\n  return Vibrato;\n}(Effect);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,MAAM,QAAuB,UAAU;AAGhD,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,KAAK,QAAQ,uBAAuB;AAG7C,SAASC,QAAQ,QAAQ,wBAAwB;AAQjD;;;;;AAKA,WAAaC,OAAQ;EAAA;EAAA;EA6BpB;IAAA;IAAA;IAEC,0BAAMJ,oBAAoB,CAACI,OAAO,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IA7B5E,UAAI,GAAW,SAAS;IA8BhC,IAAMC,OAAO,GAAGP,oBAAoB,CAACI,OAAO,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAE9F,MAAKE,UAAU,GAAG,IAAIN,KAAK,CAAC;MAC3BO,OAAO,EAAE,MAAKA,OAAO;MACrBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAEJ,OAAO,CAACI;KAClB,CAAC;IACF,MAAKC,IAAI,GAAG,IAAIX,GAAG,CAAC;MACnBQ,OAAO,EAAE,MAAKA,OAAO;MACrBI,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAER,OAAO,CAACI,QAAQ;MACrBK,SAAS,EAAET,OAAO,CAACS,SAAS;MAC5BC,KAAK,EAAE,CAAC,EAAE,CAAC;KACX,CAAC,CAACC,KAAK,EAAE,CAACC,OAAO,CAAC,MAAKX,UAAU,CAACE,SAAS,CAAC;IAC7C,MAAKM,SAAS,GAAG,MAAKJ,IAAI,CAACI,SAAS;IACpC,MAAKI,KAAK,GAAG,MAAKR,IAAI,CAACS,SAAS;IAEhC,MAAKD,KAAK,CAACE,KAAK,GAAGf,OAAO,CAACa,KAAK;IAChCjB,QAAQ,gCAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACtC,MAAKoB,UAAU,CAACC,KAAK,CAAC,MAAKhB,UAAU,EAAE,MAAKiB,YAAY,CAAC;IAAC;EAC3D;EAAC;IAAA;IAAA;IAWD;;;IAGA,eAAQ;MACP,OAAO,IAAI,CAACb,IAAI,CAACC,IAAI;IACtB,CAAC;IAAA,KACD,aAASA,IAAI;MACZ,IAAI,CAACD,IAAI,CAACC,IAAI,GAAGA,IAAI;IACtB;EAAC;IAAA;IAAA,OAED,mBAAO;MACN;MACA,IAAI,CAACL,UAAU,CAACkB,OAAO,EAAE;MACzB,IAAI,CAACd,IAAI,CAACc,OAAO,EAAE;MACnB,IAAI,CAACV,SAAS,CAACU,OAAO,EAAE;MACxB,IAAI,CAACN,KAAK,CAACM,OAAO,EAAE;MACpB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OA1BD,uBAAkB;MACjB,OAAOC,MAAM,CAACC,MAAM,CAAC7B,MAAM,CAACM,WAAW,EAAE,EAAE;QAC1CM,QAAQ,EAAE,KAAK;QACfK,SAAS,EAAE,CAAC;QACZI,KAAK,EAAE,GAAG;QACVP,IAAI,EAAE;OACN,CAAC;IACH;EAAC;EAAA;AAAA,EA9D2Bd,MAAsB","names":["Effect","optionsFromArguments","LFO","Delay","readOnly","Vibrato","getDefaults","arguments","options","_delayNode","context","delayTime","maxDelay","_lfo","type","min","max","frequency","phase","start","connect","depth","amplitude","value","effectSend","chain","effectReturn","dispose","Object","assign"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\tone\\Tone\\effect\\Vibrato.ts"],"sourcesContent":["import { Effect, EffectOptions } from \"./Effect\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { Frequency, NormalRange, Seconds } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { Param } from \"../core/context/Param\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface VibratoOptions extends EffectOptions {\n\tmaxDelay: Seconds;\n\tfrequency: Frequency;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n}\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall. \n * @category Effect\n */\nexport class Vibrato extends Effect<VibratoOptions> {\n\n\treadonly name: string = \"Vibrato\";\n\t/**\n\t * The delay node used for the vibrato effect\n\t */\n\tprivate _delayNode: Delay;\n\t\n\t/**\n\t * The LFO used to control the vibrato\n\t */\n\tprivate _lfo: LFO;\n\t\n\t/**\n\t * The frequency of the vibrato\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\t\n\t/**\n\t * The depth of the vibrato. \n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * @param frequency The frequency of the vibrato.\n\t * @param depth The amount the pitch is modulated.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<VibratoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 0,\n\t\t\tmax: options.maxDelay, \n\t\t\tfrequency: options.frequency,\n\t\t\tphase: -90 // offse the phase so the resting position is in the center\n\t\t}).start().connect(this._delayNode.delayTime);\n\t\tthis.frequency = this._lfo.frequency;\n\t\tthis.depth = this._lfo.amplitude;\n\n\t\tthis.depth.value = options.depth;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n\t}\n\n\tstatic getDefaults(): VibratoOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tmaxDelay: 0.005,\n\t\t\tfrequency: 5,\n\t\t\tdepth: 0.1,\n\t\t\ttype: \"sine\" as \"sine\"\n\t\t});\n\t}\n\n\t/**\n\t * Type of oscillator attached to the Vibrato.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
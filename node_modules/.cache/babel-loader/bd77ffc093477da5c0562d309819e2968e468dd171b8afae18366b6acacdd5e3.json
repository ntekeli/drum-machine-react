{"ast":null,"code":"export var createAddSilentConnection = function createAddSilentConnection(createNativeGainNode) {\n  return function (nativeContext, nativeAudioScheduledSourceNode) {\n    var nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n    var disconnect = function disconnect() {\n      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,yBAAyB,GAAgC,SAAzDA,yBAAyB,CAAiCC,oBAAoB,EAAI;EAC3F,OAAO,UAACC,aAAa,EAAEC,8BAA8B,EAAI;IACrD,IAAMC,cAAc,GAAGH,oBAAoB,CAACC,aAAa,EAAE;MACvDG,YAAY,EAAE,CAAC;MACfC,gBAAgB,EAAE,UAAU;MAC5BC,qBAAqB,EAAE,UAAU;MACjCC,IAAI,EAAE;KACT,CAAC;IAEFL,8BAA8B,CAACM,OAAO,CAACL,cAAc,CAAC,CAACK,OAAO,CAACP,aAAa,CAACQ,WAAW,CAAC;IAEzF,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAQ;MACpBR,8BAA8B,CAACS,mBAAmB,CAAC,OAAO,EAAED,UAAU,CAAC;MACvER,8BAA8B,CAACQ,UAAU,CAACP,cAAc,CAAC;MACzDA,cAAc,CAACO,UAAU,EAAE;IAC/B,CAAC;IAEDR,8BAA8B,CAACU,gBAAgB,CAAC,OAAO,EAAEF,UAAU,CAAC;EACxE,CAAC;AACL,CAAC","names":["createAddSilentConnection","createNativeGainNode","nativeContext","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","destination","disconnect","removeEventListener","addEventListener"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\add-silent-connection.ts"],"sourcesContent":["import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var createGetActiveAudioWorkletNodeInputs = function createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey) {\n  return function (nativeAudioWorkletNode) {\n    return getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,qCAAqC,GAA4C,SAAjFA,qCAAqC,CAC9CC,iCAAiC,EACjCC,cAAc,EACd;EACA,OAAO,UAAqBC,sBAA+C;IAAA,OACrCD,cAAc,CAACD,iCAAiC,EAAEE,sBAAsB,CAAC;EAAA;AACnH,CAAC","names":["createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","getValueForKey","nativeAudioWorkletNode"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\get-active-audio-worklet-node-inputs.ts"],"sourcesContent":["import { TActiveInputConnection, TContext, TGetActiveAudioWorkletNodeInputsFactory, TNativeAudioWorkletNode } from '../types';\n\nexport const createGetActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFactory = (\n    activeAudioWorkletNodeInputsStore,\n    getValueForKey\n) => {\n    return <T extends TContext>(nativeAudioWorkletNode: TNativeAudioWorkletNode) =>\n        <Set<TActiveInputConnection<T>>[]>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
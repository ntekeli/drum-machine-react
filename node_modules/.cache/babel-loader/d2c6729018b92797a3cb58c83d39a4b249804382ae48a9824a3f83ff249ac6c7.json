{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport var Zero = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(Zero, _SignalOperator);\n  var _super = _createSuper(Zero);\n  function Zero() {\n    var _this;\n    _classCallCheck(this, Zero);\n    _this = _super.call(this, Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n    _this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n    _this._gain = new Gain({\n      context: _this.context\n    });\n    /**\n     * Only outputs 0\n     */\n    _this.output = _this._gain;\n    /**\n     * no input node\n     */\n    _this.input = undefined;\n    connect(_this.context.getConstant(0), _this._gain);\n    return _this;\n  }\n  /**\n   * clean up\n   */\n  _createClass(Zero, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Zero.prototype), \"dispose\", this).call(this);\n      disconnect(this.context.getConstant(0), this._gain);\n      return this;\n    }\n  }]);\n  return Zero;\n}(SignalOperator);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAA8B,+BAA+B;AACzF,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,cAAc,QAAQ,kBAAkB;AAEjD;;;;;;AAMA,WAAaC,IAAK;EAAA;EAAA;EAoBjB;IAAA;IAAA;IACC,0BAAMC,MAAM,CAACC,MAAM,CAACJ,oBAAoB,CAACE,IAAI,CAACG,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC;IAnBhE,UAAI,GAAW,MAAM;IAE9B;;;IAGQ,WAAK,GAAG,IAAIT,IAAI,CAAC;MAAEU,OAAO,EAAE,MAAKA;IAAO,CAAE,CAAC;IAEnD;;;IAGA,YAAM,GAAG,MAAKC,KAAK;IAEnB;;;IAGA,WAAK,GAAGC,SAAS;IAKhBX,OAAO,CAAC,MAAKS,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE,MAAKF,KAAK,CAAC;IAAC;EAClD;EAEA;;;EAAA;IAAA;IAAA,OAGA,mBAAO;MACN;MACAT,UAAU,CAAC,IAAI,CAACQ,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACF,KAAK,CAAC;MACnD,OAAO,IAAI;IACZ;EAAC;EAAA;AAAA,EAhCwBP,cAAoC","names":["Gain","connect","disconnect","optionsFromArguments","SignalOperator","Zero","Object","assign","getDefaults","arguments","context","_gain","undefined","getConstant"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\tone\\Tone\\signal\\Zero.ts"],"sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
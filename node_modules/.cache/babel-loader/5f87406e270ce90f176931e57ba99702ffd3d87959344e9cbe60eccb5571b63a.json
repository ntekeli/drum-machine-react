{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ntekeli\\\\Desktop\\\\drum-machine\\\\drum-machine\\\\src\\\\components\\\\Seq.js\";\nimport \"../App.css\";\nimport GridCell from \"./GridCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Seq = _ref => {\n  let {\n    isPlaying,\n    beatState,\n    gridChange,\n    gridState,\n    playBd,\n    playSn,\n    playCh,\n    playOh,\n    playCy\n  } = _ref;\n  const {\n    bPat,\n    sPat,\n    hPat,\n    oPat,\n    cPat\n  } = gridState;\n  const bGrid = bPat.map((beat, index) => {\n    if (beat === 0) {\n      return /*#__PURE__*/_jsxDEV(GridCell, {\n        isPlaying: isPlaying,\n        beatState: beatState,\n        active: false,\n        index: index,\n        id: index,\n        gridChange: gridChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(GridCell, {\n      isPlaying: isPlaying,\n      beatState: beatState,\n      active: true,\n      index: index,\n      id: index,\n      gridChange: gridChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  const sGrid = sPat.map((beat, index) => {\n    if (beat === 0) {\n      return /*#__PURE__*/_jsxDEV(GridCell, {\n        isPlaying: isPlaying,\n        beatState: beatState,\n        active: false,\n        index: index,\n        id: index + 16,\n        gridChange: gridChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(GridCell, {\n      isPlaying: isPlaying,\n      beatState: beatState,\n      active: true,\n      index: index,\n      id: index + 16,\n      gridChange: gridChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  });\n  const hGrid = hPat.map((beat, index) => {\n    if (beat === 0) {\n      return /*#__PURE__*/_jsxDEV(GridCell, {\n        isPlaying: isPlaying,\n        beatState: beatState,\n        active: false,\n        index: index,\n        id: index + 32,\n        gridChange: gridChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(GridCell, {\n      isPlaying: isPlaying,\n      beatState: beatState,\n      active: true,\n      index: index,\n      id: index + 32,\n      gridChange: gridChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  });\n  const oGrid = oPat.map((beat, index) => {\n    if (beat === 0) {\n      return /*#__PURE__*/_jsxDEV(GridCell, {\n        isPlaying: isPlaying,\n        beatState: beatState,\n        active: false,\n        index: index,\n        id: index + 48,\n        gridChange: gridChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(GridCell, {\n      isPlaying: isPlaying,\n      beatState: beatState,\n      active: true,\n      index: index,\n      id: index + 48,\n      gridChange: gridChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  });\n  const cGrid = cPat.map((beat, index) => {\n    if (beat === 0) {\n      return /*#__PURE__*/_jsxDEV(GridCell, {\n        isPlaying: isPlaying,\n        beatState: beatState,\n        active: false,\n        index: index,\n        id: index + 64,\n        gridChange: gridChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(GridCell, {\n      isPlaying: isPlaying,\n      beatState: beatState,\n      active: true,\n      index: index,\n      id: index + 64,\n      gridChange: gridChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seq\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kick:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), bGrid, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Snare:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), sGrid, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cl. Hat:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), hGrid, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"O. Hat:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), oGrid, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cymbal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), cGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pads\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: playBd,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Kick\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: playSn,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Snare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: playCh,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ClHat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: playOh,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"OpHat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: playCy,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cym\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_c = Seq;\nexport default Seq;\nvar _c;\n$RefreshReg$(_c, \"Seq\");","map":{"version":3,"names":["GridCell","Seq","isPlaying","beatState","gridChange","gridState","playBd","playSn","playCh","playOh","playCy","bPat","sPat","hPat","oPat","cPat","bGrid","map","beat","index","sGrid","hGrid","oGrid","cGrid"],"sources":["C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/src/components/Seq.js"],"sourcesContent":["import \"../App.css\";\r\n\r\nimport GridCell from \"./GridCell\";\r\n\r\nconst Seq = ({\r\n  isPlaying,\r\n  beatState,\r\n  gridChange,\r\n  gridState,\r\n  playBd,\r\n  playSn,\r\n  playCh,\r\n  playOh,\r\n  playCy,\r\n}) => {\r\n  const { bPat, sPat, hPat, oPat, cPat } = gridState;\r\n\r\n  const bGrid = bPat.map((beat, index) => {\r\n    if (beat === 0) {\r\n      return (\r\n        <GridCell\r\n          isPlaying={isPlaying}\r\n          beatState={beatState}\r\n          active={false}\r\n          key={index}\r\n          index={index}\r\n          id={index}\r\n          gridChange={gridChange}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GridCell\r\n        isPlaying={isPlaying}\r\n        beatState={beatState}\r\n        active={true}\r\n        key={index}\r\n        index={index}\r\n        id={index}\r\n        gridChange={gridChange}\r\n      />\r\n    );\r\n  });\r\n  const sGrid = sPat.map((beat, index) => {\r\n    if (beat === 0) {\r\n      return (\r\n        <GridCell\r\n          isPlaying={isPlaying}\r\n          beatState={beatState}\r\n          active={false}\r\n          key={index}\r\n          index={index}\r\n          id={index + 16}\r\n          gridChange={gridChange}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GridCell\r\n        isPlaying={isPlaying}\r\n        beatState={beatState}\r\n        active={true}\r\n        key={index}\r\n        index={index}\r\n        id={index + 16}\r\n        gridChange={gridChange}\r\n      />\r\n    );\r\n  });\r\n  const hGrid = hPat.map((beat, index) => {\r\n    if (beat === 0) {\r\n      return (\r\n        <GridCell\r\n          isPlaying={isPlaying}\r\n          beatState={beatState}\r\n          active={false}\r\n          key={index}\r\n          index={index}\r\n          id={index + 32}\r\n          gridChange={gridChange}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GridCell\r\n        isPlaying={isPlaying}\r\n        beatState={beatState}\r\n        active={true}\r\n        key={index}\r\n        index={index}\r\n        id={index + 32}\r\n        gridChange={gridChange}\r\n      />\r\n    );\r\n  });\r\n  const oGrid = oPat.map((beat, index) => {\r\n    if (beat === 0) {\r\n      return (\r\n        <GridCell\r\n          isPlaying={isPlaying}\r\n          beatState={beatState}\r\n          active={false}\r\n          key={index}\r\n          index={index}\r\n          id={index + 48}\r\n          gridChange={gridChange}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GridCell\r\n        isPlaying={isPlaying}\r\n        beatState={beatState}\r\n        active={true}\r\n        key={index}\r\n        index={index}\r\n        id={index + 48}\r\n        gridChange={gridChange}\r\n      />\r\n    );\r\n  });\r\n  const cGrid = cPat.map((beat, index) => {\r\n    if (beat === 0) {\r\n      return (\r\n        <GridCell\r\n          isPlaying={isPlaying}\r\n          beatState={beatState}\r\n          active={false}\r\n          key={index}\r\n          index={index}\r\n          id={index + 64}\r\n          gridChange={gridChange}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <GridCell\r\n        isPlaying={isPlaying}\r\n        beatState={beatState}\r\n        active={true}\r\n        key={index}\r\n        index={index}\r\n        id={index + 64}\r\n        gridChange={gridChange}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"seq\">\r\n        <div className=\"grid\">\r\n          <p>Kick:</p>\r\n          {bGrid}\r\n          <p>Snare:</p>\r\n          {sGrid}\r\n          <p>Cl. Hat:</p>\r\n          {hGrid}\r\n          <p>O. Hat:</p>\r\n          {oGrid}\r\n          <p>Cymbal:</p>\r\n          {cGrid}\r\n        </div>\r\n\r\n      <div className=\"pads\">\r\n        <div onMouseDown={playBd}>\r\n          <p>Kick</p>\r\n        </div>\r\n        <div onMouseDown={playSn}>\r\n          <p>Snare</p>\r\n        </div>\r\n        <div onMouseDown={playCh}>\r\n          <p>ClHat</p>\r\n        </div>\r\n        <div onMouseDown={playOh}>\r\n          <p>OpHat</p>\r\n        </div>\r\n        <div onMouseDown={playCy}>\r\n          <p>Cym</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Seq;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
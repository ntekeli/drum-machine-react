{"ast":null,"code":"export var createNativeMediaStreamTrackAudioSourceNodeFactory = function createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext) {\n  return function (nativeAudioContext, _ref) {\n    var mediaStreamTrack = _ref.mediaStreamTrack;\n    // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n    }\n    var mediaStream = new MediaStream([mediaStreamTrack]);\n    var nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n    // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n    if (mediaStreamTrack.kind !== 'audio') {\n      throw createInvalidStateError();\n    }\n    // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n    if (isNativeOfflineAudioContext(nativeAudioContext)) {\n      throw new TypeError();\n    }\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,kDAAkD,GAAyD,SAA3GA,kDAAkD,CAC3DC,uBAAuB,EACvBC,2BAA2B,EAC3B;EACA,OAAO,UAACC,kBAAkB,QAA0B;IAAA,IAAtBC,gBAAgB,QAAhBA,gBAAgB;IAC1C;IACA,IAAI,OAAOD,kBAAkB,CAACE,4BAA4B,KAAK,UAAU,EAAE;MACvE,OAAOF,kBAAkB,CAACE,4BAA4B,CAACD,gBAAgB,CAAC;;IAG5E,IAAME,WAAW,GAAG,IAAIC,WAAW,CAAC,CAACH,gBAAgB,CAAC,CAAC;IACvD,IAAMI,gCAAgC,GAAGL,kBAAkB,CAACM,uBAAuB,CAACH,WAAW,CAAC;IAEhG;IACA,IAAIF,gBAAgB,CAACM,IAAI,KAAK,OAAO,EAAE;MACnC,MAAMT,uBAAuB,EAAE;;IAGnC;IACA,IAAIC,2BAA2B,CAACC,kBAAkB,CAAC,EAAE;MACjD,MAAM,IAAIQ,SAAS,EAAE;;IAGzB,OAAOH,gCAAgC;EAC3C,CAAC;AACL,CAAC","names":["createNativeMediaStreamTrackAudioSourceNodeFactory","createInvalidStateError","isNativeOfflineAudioContext","nativeAudioContext","mediaStreamTrack","createMediaStreamTrackSource","mediaStream","MediaStream","nativeMediaStreamAudioSourceNode","createMediaStreamSource","kind","TypeError"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\native-media-stream-track-audio-source-node-factory.ts"],"sourcesContent":["import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
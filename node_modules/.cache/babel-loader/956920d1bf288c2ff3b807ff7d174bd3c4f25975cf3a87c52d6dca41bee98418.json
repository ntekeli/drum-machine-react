{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport var createAudioWorkletProcessorPromise = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(processorConstructor, audioWorkletNodeOptions) {\n    var clonedAudioWorkletNodeOptions;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n        case 2:\n          clonedAudioWorkletNodeOptions = _context.sent;\n          return _context.abrupt(\"return\", new processorConstructor(clonedAudioWorkletNodeOptions));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function createAudioWorkletProcessorPromise(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"mappings":";;AACA,SAASA,4BAA4B,QAAQ,oCAAoC;AAEjF,OAAO,IAAMC,kCAAkC;EAAA,sEAAG,iBAC9CC,oBAAuD,EACvDC,uBAAiD;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAELH,4BAA4B,CAACG,uBAAuB,CAAC;QAAA;UAA3FC,6BAA6B;UAAA,iCAE5B,IAAIF,oBAAoB,CAACE,6BAA6B,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACjE;EAAA,gBAPYH,kCAAkC;IAAA;EAAA;AAAA,GAO9C","names":["cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","processorConstructor","audioWorkletNodeOptions","clonedAudioWorkletNodeOptions"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\create-audio-worklet-processor-promise.ts"],"sourcesContent":["import { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\n\nexport const createAudioWorkletProcessorPromise = async (\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
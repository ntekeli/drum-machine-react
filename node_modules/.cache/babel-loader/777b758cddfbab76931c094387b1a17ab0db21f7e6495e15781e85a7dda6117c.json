{"ast":null,"code":"import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport var deletePassiveInputConnectionToAudioNode = function deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input) {\n  var passiveInputConnections = getValueForKey(passiveInputs, source);\n  var matchingConnection = pickElementFromSet(passiveInputConnections, function (passiveInputConnection) {\n    return passiveInputConnection[0] === output && passiveInputConnection[1] === input;\n  });\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n  return matchingConnection;\n};","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,SAASC,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAO,IAAMC,uCAAuC,GAAG,SAA1CA,uCAAuC,CAChDC,aAA4E,EAC5EC,MAAqB,EACrBC,MAAc,EACdC,KAAa,EACb;EACA,IAAMC,uBAAuB,GAAGP,cAAc,CAACG,aAAa,EAAEC,MAAM,CAAC;EACrE,IAAMI,kBAAkB,GAAGP,kBAAkB,CACzCM,uBAAuB,EACvB,UAACE,sBAAsB;IAAA,OAAKA,sBAAsB,CAAC,CAAC,CAAC,KAAKJ,MAAM,IAAII,sBAAsB,CAAC,CAAC,CAAC,KAAKH,KAAK;EAAA,EAC1G;EAED,IAAIC,uBAAuB,CAACG,IAAI,KAAK,CAAC,EAAE;IACpCP,aAAa,CAACQ,MAAM,CAACP,MAAM,CAAC;;EAGhC,OAAOI,kBAAkB;AAC7B,CAAC","names":["getValueForKey","pickElementFromSet","deletePassiveInputConnectionToAudioNode","passiveInputs","source","output","input","passiveInputConnections","matchingConnection","passiveInputConnection","size","delete"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\delete-passive-input-connection-to-audio-node.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioNodeInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioNode = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>,\n    source: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
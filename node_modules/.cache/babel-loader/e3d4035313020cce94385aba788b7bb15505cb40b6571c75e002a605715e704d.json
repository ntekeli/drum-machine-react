{"ast":null,"code":"import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport var createNativeChannelMergerNodeFactory = function createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode) {\n  return function (nativeContext, options) {\n    var nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n    /*\n     * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n     * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n     * the webkitAudioContext is used as a workaround here.\n     */\n    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n    }\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,4BAA4B,QAAQ,6CAA6C;AAG1F,OAAO,IAAMC,oCAAoC,GAA2C,SAA/EA,oCAAoC,CAC7CC,6BAA6B,EAC7BC,qBAAqB,EACrB;EACA,OAAO,UAACC,aAAa,EAAEC,OAAO,EAAI;IAC9B,IAAMC,uBAAuB,GAAGF,aAAa,CAACG,mBAAmB,CAACF,OAAO,CAACG,cAAc,CAAC;IAEzF;;;;;IAKA,IAAIN,6BAA6B,KAAK,IAAI,IAAIA,6BAA6B,CAACO,IAAI,KAAK,oBAAoB,EAAE;MACvGN,qBAAqB,CAACC,aAAa,EAAEE,uBAAuB,CAAC;;IAGjEN,4BAA4B,CAACM,uBAAuB,EAAED,OAAO,CAAC;IAE9D,OAAOC,uBAAuB;EAClC,CAAC;AACL,CAAC","names":["assignNativeAudioNodeOptions","createNativeChannelMergerNodeFactory","nativeAudioContextConstructor","wrapChannelMergerNode","nativeContext","options","nativeChannelMergerNode","createChannelMerger","numberOfInputs","name"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\native-channel-merger-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
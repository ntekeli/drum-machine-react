{"ast":null,"code":"export var cloneAudioWorkletNodeOptions = function cloneAudioWorkletNodeOptions(audioWorkletNodeOptions) {\n  return new Promise(function (resolve, reject) {\n    var _MessageChannel = new MessageChannel(),\n      port1 = _MessageChannel.port1,\n      port2 = _MessageChannel.port2;\n    port1.onmessage = function (_ref) {\n      var data = _ref.data;\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n    port1.onmessageerror = function (_ref2) {\n      var data = _ref2.data;\n      port1.close();\n      port2.close();\n      reject(data);\n    };\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA4B,CAAIC,uBAAiD,EAAuC;EACjI,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAI;IACnC,sBAAyB,IAAIC,cAAc,EAAE;MAArCC,KAAK,mBAALA,KAAK;MAAEC,KAAK,mBAALA,KAAK;IAEpBD,KAAK,CAACE,SAAS,GAAG,gBAAa;MAAA,IAAVC,IAAI,QAAJA,IAAI;MACrBH,KAAK,CAACI,KAAK,EAAE;MACbH,KAAK,CAACG,KAAK,EAAE;MAEbP,OAAO,CAACM,IAAI,CAAC;IACjB,CAAC;IACDH,KAAK,CAACK,cAAc,GAAG,iBAAa;MAAA,IAAVF,IAAI,SAAJA,IAAI;MAC1BH,KAAK,CAACI,KAAK,EAAE;MACbH,KAAK,CAACG,KAAK,EAAE;MAEbN,MAAM,CAACK,IAAI,CAAC;IAChB,CAAC;IAED;IACAF,KAAK,CAACK,WAAW,CAACX,uBAAuB,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC","names":["cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","Promise","resolve","reject","MessageChannel","port1","port2","onmessage","data","close","onmessageerror","postMessage"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\clone-audio-worklet-node-options.ts"],"sourcesContent":["import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
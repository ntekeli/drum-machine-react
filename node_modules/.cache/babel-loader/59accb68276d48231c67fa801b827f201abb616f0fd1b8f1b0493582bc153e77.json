{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ntekeli\\\\Desktop\\\\drum-machine\\\\drum-machine\\\\src\\\\components\\\\GridCell.js\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridCell = _ref => {\n  _s();\n  let {\n    active,\n    gridChange,\n    key\n  } = _ref;\n  const [activeState, setActiveState] = useState(active);\n  const gridCellHandler = () => {\n    setActiveState(!activeState);\n    gridChange(key);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: activeState ? \"grid-cell-active\" : \"grid-cell\",\n    onClick: gridCellHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(GridCell, \"ERKd92l91t/lW9LgNOLkf6OhkxQ=\");\n_c = GridCell;\nexport default GridCell;\nvar _c;\n$RefreshReg$(_c, \"GridCell\");","map":{"version":3,"names":["useState","GridCell","active","gridChange","key","activeState","setActiveState","gridCellHandler"],"sources":["C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/src/components/GridCell.js"],"sourcesContent":["import \"../App.css\";\r\nimport { useState } from 'react';\r\n\r\nconst GridCell = ({ active, gridChange, key }) => {\r\n    const [activeState, setActiveState] = useState(active)\r\n    const gridCellHandler = () => {\r\n        setActiveState(!activeState);\r\n        gridChange(key);\r\n    }\r\n  return (\r\n    <div\r\n      className={activeState ? \"grid-cell-active\" : \"grid-cell\"}\r\n      onClick={gridCellHandler}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default GridCell;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,QAAQ,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAI,CAAC;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAACE,MAAM,CAAC;EACtD,MAAMK,eAAe,GAAG,MAAM;IAC1BD,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5BF,UAAU,CAACC,GAAG,CAAC;EACnB,CAAC;EACH,oBACE;IACE,SAAS,EAAEC,WAAW,GAAG,kBAAkB,GAAG,WAAY;IAC1D,OAAO,EAAEE;EAAgB;IAAA;IAAA;IAAA;EAAA,QACpB;AAEX,CAAC;AAAC,GAZIN,QAAQ;AAAA,KAARA,QAAQ;AAcd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
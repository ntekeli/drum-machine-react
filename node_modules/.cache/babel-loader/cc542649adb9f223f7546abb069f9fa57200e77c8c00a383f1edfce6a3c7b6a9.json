{"ast":null,"code":"export var createTestAudioContextCloseMethodSupport = function createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor) {\n  return function () {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n    // Try to check the prototype before constructing the AudioContext.\n    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n      return true;\n    }\n    var audioContext = new nativeAudioContextConstructor();\n    var isAudioContextClosable = audioContext.close !== undefined;\n    try {\n      audioContext.close();\n    } catch (_unused) {\n      // Ignore errors.\n    }\n    return isAudioContextClosable;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,wCAAwC,GAA+C,SAAvFA,wCAAwC,CAAgDC,6BAA6B,EAAI;EAClI,OAAO,YAAK;IACR,IAAIA,6BAA6B,KAAK,IAAI,EAAE;MACxC,OAAO,KAAK;;IAGhB;IACA,IAAIA,6BAA6B,CAACC,SAAS,KAAKC,SAAS,IAAIF,6BAA6B,CAACC,SAAS,CAACE,KAAK,KAAKD,SAAS,EAAE;MACtH,OAAO,IAAI;;IAGf,IAAME,YAAY,GAAG,IAAIJ,6BAA6B,EAAE;IAExD,IAAMK,sBAAsB,GAAGD,YAAY,CAACD,KAAK,KAAKD,SAAS;IAE/D,IAAI;MACAE,YAAY,CAACD,KAAK,EAAE;KACvB,CAAC,gBAAM;MACJ;IAAA;IAGJ,OAAOE,sBAAsB;EACjC,CAAC;AACL,CAAC","names":["createTestAudioContextCloseMethodSupport","nativeAudioContextConstructor","prototype","undefined","close","audioContext","isAudioContextClosable"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\test-audio-context-close-method-support.ts"],"sourcesContent":["import { TTestAudioContextCloseMethodSupportFactory } from '../types';\n\nexport const createTestAudioContextCloseMethodSupport: TTestAudioContextCloseMethodSupportFactory = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n\n        const audioContext = new nativeAudioContextConstructor();\n\n        const isAudioContextClosable = audioContext.close !== undefined;\n\n        try {\n            audioContext.close();\n        } catch {\n            // Ignore errors.\n        }\n\n        return isAudioContextClosable;\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
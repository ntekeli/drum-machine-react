{"ast":null,"code":"import _slicedToArray from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { insertElementInSet } from './insert-element-in-set';\nexport var addPassiveInputConnectionToAudioParam = function addPassiveInputConnectionToAudioParam(passiveInputs, _ref, ignoreDuplicates) {\n  var _ref2 = _slicedToArray(_ref, 3),\n    source = _ref2[0],\n    output = _ref2[1],\n    eventListener = _ref2[2];\n  var passiveInputConnections = passiveInputs.get(source);\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, eventListener], function (passiveInputConnection) {\n      return passiveInputConnection[0] === output;\n    }, ignoreDuplicates);\n  }\n};","map":{"version":3,"mappings":";AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAO,IAAMC,qCAAqC,GAAG,SAAxCA,qCAAqC,CAC9CC,aAA6E,QAE7EC,gBAAyB,EACzB;EAAA;IAFCC,MAAM;IAAEC,MAAM;IAAEC,aAAa;EAG9B,IAAMC,uBAAuB,GAAGL,aAAa,CAACM,GAAG,CAACJ,MAAM,CAAC;EAEzD,IAAIG,uBAAuB,KAAKE,SAAS,EAAE;IACvCP,aAAa,CAACQ,GAAG,CAACN,MAAM,EAAE,IAAIO,GAAG,CAAC,CAAC,CAACN,MAAM,EAAEC,aAAa,CAAC,CAAC,CAAC,CAAC;GAChE,MAAM;IACHN,kBAAkB,CACdO,uBAAuB,EACvB,CAACF,MAAM,EAAEC,aAAa,CAAC,EACvB,UAACM,sBAAsB;MAAA,OAAKA,sBAAsB,CAAC,CAAC,CAAC,KAAKP,MAAM;IAAA,GAChEF,gBAAgB,CACnB;;AAET,CAAC","names":["insertElementInSet","addPassiveInputConnectionToAudioParam","passiveInputs","ignoreDuplicates","source","output","eventListener","passiveInputConnections","get","undefined","set","Set","passiveInputConnection"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\add-passive-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
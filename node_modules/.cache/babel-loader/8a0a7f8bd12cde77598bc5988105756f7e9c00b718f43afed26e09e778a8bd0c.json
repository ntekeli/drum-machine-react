{"ast":null,"code":"import _objectSpread from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var sanitizePeriodicWaveOptions = function sanitizePeriodicWaveOptions(options) {\n  var imag = options.imag,\n    real = options.real;\n  if (imag === undefined) {\n    if (real === undefined) {\n      return _objectSpread(_objectSpread({}, options), {}, {\n        imag: [0, 0],\n        real: [0, 0]\n      });\n    }\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: Array.from(real, function () {\n        return 0;\n      }),\n      real: real\n    });\n  }\n  if (real === undefined) {\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: imag,\n      real: Array.from(imag, function () {\n        return 0;\n      })\n    });\n  }\n  return _objectSpread(_objectSpread({}, options), {}, {\n    imag: imag,\n    real: real\n  });\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,2BAA2B,GAAyC,SAApEA,2BAA2B,CAA0CC,OAAO,EAAI;EACzF,IAAQC,IAAI,GAAWD,OAAO,CAAtBC,IAAI;IAAEC,IAAI,GAAKF,OAAO,CAAhBE,IAAI;EAElB,IAAID,IAAI,KAAKE,SAAS,EAAE;IACpB,IAAID,IAAI,KAAKC,SAAS,EAAE;MACpB,uCAAYH,OAAO;QAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;MAAC;;IAGnD,uCAAYF,OAAO;MAAEC,IAAI,EAAEG,KAAK,CAACC,IAAI,CAACH,IAAI,EAAE;QAAA,OAAM,CAAC;MAAA,EAAC;MAAEA,IAAI,EAAJA;IAAI;;EAG9D,IAAIA,IAAI,KAAKC,SAAS,EAAE;IACpB,uCAAYH,OAAO;MAAEC,IAAI,EAAJA,IAAI;MAAEC,IAAI,EAAEE,KAAK,CAACC,IAAI,CAACJ,IAAI,EAAE;QAAA,OAAM,CAAC;MAAA;IAAC;;EAG9D,uCAAYD,OAAO;IAAEC,IAAI,EAAJA,IAAI;IAAEC,IAAI,EAAJA;EAAI;AACnC,CAAC","names":["sanitizePeriodicWaveOptions","options","imag","real","undefined","Array","from"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\sanitize-periodic-wave-options.ts"],"sourcesContent":["import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var testAudioBufferCopyChannelMethodsOutOfBoundsSupport = function testAudioBufferCopyChannelMethodsOutOfBoundsSupport(nativeAudioBuffer) {\n  try {\n    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n  } catch (_unused) {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,mDAAmD,GAAG,SAAtDA,mDAAmD,CAAIC,iBAAqC,EAAa;EAClH,IAAI;IACAA,iBAAiB,CAACC,aAAa,CAAC,IAAIC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAC9D,CAAC,gBAAM;IACJ,OAAO,KAAK;;EAGhB,OAAO,IAAI;AACf,CAAC","names":["testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","Float32Array"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\test-audio-buffer-copy-channel-methods-out-of-bounds-support.ts"],"sourcesContent":["import { TNativeAudioBuffer } from '../types';\n\nexport const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer: TNativeAudioBuffer): boolean => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var computeBufferSize = function computeBufferSize(baseLatency, sampleRate) {\n  if (baseLatency === null) {\n    return 512;\n  }\n  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,WAA0B,EAAEC,UAAkB,EAAI;EAChF,IAAID,WAAW,KAAK,IAAI,EAAE;IACtB,OAAO,GAAG;;EAGd,OAAOE,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,KAAK,EAAEF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACP,WAAW,GAAGC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,CAAC","names":["computeBufferSize","baseLatency","sampleRate","Math","max","min","pow","round","log2"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\compute-buffer-size.ts"],"sourcesContent":["export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
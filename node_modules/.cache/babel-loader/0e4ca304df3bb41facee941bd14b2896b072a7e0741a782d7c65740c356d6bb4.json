{"ast":null,"code":"import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport var deletePassiveInputConnectionToAudioParam = function deletePassiveInputConnectionToAudioParam(passiveInputs, source, output) {\n  var passiveInputConnections = getValueForKey(passiveInputs, source);\n  var matchingConnection = pickElementFromSet(passiveInputConnections, function (passiveInputConnection) {\n    return passiveInputConnection[0] === output;\n  });\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n  return matchingConnection;\n};","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,SAASC,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAO,IAAMC,wCAAwC,GAAG,SAA3CA,wCAAwC,CACjDC,aAA6E,EAC7EC,MAAqB,EACrBC,MAAc,EACd;EACA,IAAMC,uBAAuB,GAAGN,cAAc,CAACG,aAAa,EAAEC,MAAM,CAAC;EACrE,IAAMG,kBAAkB,GAAGN,kBAAkB,CACzCK,uBAAuB,EACvB,UAACE,sBAAsB;IAAA,OAAKA,sBAAsB,CAAC,CAAC,CAAC,KAAKH,MAAM;EAAA,EACnE;EAED,IAAIC,uBAAuB,CAACG,IAAI,KAAK,CAAC,EAAE;IACpCN,aAAa,CAACO,MAAM,CAACN,MAAM,CAAC;;EAGhC,OAAOG,kBAAkB;AAC7B,CAAC","names":["getValueForKey","pickElementFromSet","deletePassiveInputConnectionToAudioParam","passiveInputs","source","output","passiveInputConnections","matchingConnection","passiveInputConnection","size","delete"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\delete-passive-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
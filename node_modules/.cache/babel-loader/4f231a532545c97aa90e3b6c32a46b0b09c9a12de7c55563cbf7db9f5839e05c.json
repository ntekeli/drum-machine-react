{"ast":null,"code":"export var createIsAnyOfflineAudioContext = function createIsAnyOfflineAudioContext(contextStore, isNativeOfflineAudioContext) {\n  return function (anything) {\n    var nativeContext = contextStore.get(anything);\n    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,IAAMA,8BAA8B,GAAqC,SAAnEA,8BAA8B,CAAsCC,YAAY,EAAEC,2BAA2B,EAAI;EAC1H,OAAO,UAACC,QAAQ,EAAiG;IAC7G,IAAMC,aAAa,GAAGH,YAAY,CAACI,GAAG,CAAMF,QAAQ,CAAC;IAErD,OAAOD,2BAA2B,CAACE,aAAa,CAAC,IAAIF,2BAA2B,CAACC,QAAQ,CAAC;EAC9F,CAAC;AACL,CAAC","names":["createIsAnyOfflineAudioContext","contextStore","isNativeOfflineAudioContext","anything","nativeContext","get"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\is-any-offline-audio-context.ts"],"sourcesContent":["import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
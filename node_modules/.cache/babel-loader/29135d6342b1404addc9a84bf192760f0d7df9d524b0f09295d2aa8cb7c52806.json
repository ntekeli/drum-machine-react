{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport var Scale = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(Scale, _SignalOperator);\n  var _super = _createSuper(Scale);\n  function Scale() {\n    var _this;\n    _classCallCheck(this, Scale);\n    _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n    _this.name = \"Scale\";\n    var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    _this._mult = _this.input = new Multiply({\n      context: _this.context,\n      value: options.max - options.min\n    });\n    _this._add = _this.output = new Add({\n      context: _this.context,\n      value: options.min\n    });\n    _this._min = options.min;\n    _this._max = options.max;\n    _this.input.connect(_this.output);\n    return _this;\n  }\n  _createClass(Scale, [{\n    key: \"min\",\n    get:\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    function get() {\n      return this._min;\n    },\n    set: function set(min) {\n      this._min = min;\n      this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(max) {\n      this._max = max;\n      this._setRange();\n    }\n    /**\n     * set the values\n     */\n  }, {\n    key: \"_setRange\",\n    value: function _setRange() {\n      this._add.value = this._min;\n      this._mult.value = this._max - this._min;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Scale.prototype), \"dispose\", this).call(this);\n      this._add.dispose();\n      this._mult.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(SignalOperator.getDefaults(), {\n        max: 1,\n        min: 0\n      });\n    }\n  }]);\n  return Scale;\n}(SignalOperator);","map":{"version":3,"mappings":";;;;;;AACA,SAASA,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,cAAc,QAAQ,kBAAkB;AAOjD;;;;;;;;;;;AAWA,WAAaC,KAAmD;EAAA;EAAA;EAiC/D;IAAA;IAAA;IACC,0BAAMC,MAAM,CAACC,MAAM,CAACN,oBAAoB,CAACI,KAAK,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAhCjF,UAAI,GAAW,OAAO;IAiC9B,IAAMC,OAAO,GAAGT,oBAAoB,CAACI,KAAK,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAEpF,MAAKE,KAAK,GAAG,MAAKC,KAAK,GAAG,IAAIT,QAAQ,CAAC;MACtCU,OAAO,EAAE,MAAKA,OAAO;MACrBC,KAAK,EAAEJ,OAAO,CAACK,GAAG,GAAGL,OAAO,CAACM;KAC7B,CAAC;IAEF,MAAKC,IAAI,GAAG,MAAKC,MAAM,GAAG,IAAIhB,GAAG,CAAC;MACjCW,OAAO,EAAE,MAAKA,OAAO;MACrBC,KAAK,EAAEJ,OAAO,CAACM;KACf,CAAC;IAEF,MAAKG,IAAI,GAAGT,OAAO,CAACM,GAAG;IACvB,MAAKI,IAAI,GAAGV,OAAO,CAACK,GAAG;IAEvB,MAAKH,KAAK,CAACS,OAAO,CAAC,MAAKH,MAAM,CAAC;IAAC;EACjC;EAAC;IAAA;IAAA;IASD;;;IAGA,eAAO;MACN,OAAO,IAAI,CAACC,IAAI;IACjB,CAAC;IAAA,KACD,aAAQH,GAAG;MACV,IAAI,CAACG,IAAI,GAAGH,GAAG;MACf,IAAI,CAACM,SAAS,EAAE;IACjB;IAEA;;;EAAA;IAAA;IAAA,KAGA,eAAO;MACN,OAAO,IAAI,CAACF,IAAI;IACjB,CAAC;IAAA,KACD,aAAQL,GAAG;MACV,IAAI,CAACK,IAAI,GAAGL,GAAG;MACf,IAAI,CAACO,SAAS,EAAE;IACjB;IAEA;;;EAAA;IAAA;IAAA,OAGQ,qBAAS;MAChB,IAAI,CAACL,IAAI,CAACH,KAAK,GAAG,IAAI,CAACK,IAAI;MAC3B,IAAI,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI,CAACM,IAAI,GAAG,IAAI,CAACD,IAAI;IACzC;EAAC;IAAA;IAAA,OAED,mBAAO;MACN;MACA,IAAI,CAACF,IAAI,CAACM,OAAO,EAAE;MACnB,IAAI,CAACZ,KAAK,CAACY,OAAO,EAAE;MACpB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OA1CD,uBAAkB;MACjB,OAAOjB,MAAM,CAACC,MAAM,CAACH,cAAc,CAACI,WAAW,EAAE,EAAE;QAClDO,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;OACL,CAAC;IACH;EAAC;EAAA;AAAA,EA1DsEZ,cAAuB","names":["optionsFromArguments","Add","Multiply","SignalOperator","Scale","Object","assign","getDefaults","arguments","options","_mult","input","context","value","max","min","_add","output","_min","_max","connect","_setRange","dispose"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\tone\\Tone\\signal\\Scale.ts"],"sourcesContent":["import { InputNode, OutputNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport interface ScaleOptions extends ToneAudioNodeOptions {\n\tmin: number;\n\tmax: number;\n}\n\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale<Options extends ScaleOptions = ScaleOptions> extends SignalOperator<Options> {\n\n\treadonly name: string = \"Scale\";\n\n\tinput: InputNode;\n\toutput: OutputNode;\n\n\t/**\n\t * Hold the multiple\n\t */\n\tprotected _mult: Multiply;\n\n\t/**\n\t * Hold the adder\n\t */\n\tprotected _add: Add;\n\n\t/**\n\t * Private reference to the min value\n\t */\n\tprivate _min: number;\n\n\t/**\n\t * Private reference to the max value\n\t */\n\tprivate _max: number;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t */\n\tconstructor(min?: number, max?: number);\n\tconstructor(options?: Partial<ScaleOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n\t\tconst options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n\n\t\tthis._mult = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.max - options.min,\n\t\t});\n\n\t\tthis._add = this.output = new Add({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.min,\n\t\t});\n\n\t\tthis._min = options.min;\n\t\tthis._max = options.max;\n\n\t\tthis.input.connect(this.output);\n\t}\n\n\tstatic getDefaults(): ScaleOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The minimum output value. This number is output when the value input value is 0.\n\t */\n\tget min(): number {\n\t\treturn this._min;\n\t}\n\tset min(min) {\n\t\tthis._min = min;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * The maximum output value. This number is output when the value input value is 1.\n\t */\n\tget max(): number {\n\t\treturn this._max;\n\t}\n\tset max(max) {\n\t\tthis._max = max;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * set the values\n\t */\n\tprivate _setRange(): void {\n\t\tthis._add.value = this._min;\n\t\tthis._mult.value = this._max - this._min;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._add.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor);\n    var _super = _createSuper(MediaStreamAudioDestinationNode);\n    function MediaStreamAudioDestinationNode(context, options) {\n      var _this;\n      _classCallCheck(this, MediaStreamAudioDestinationNode);\n      var nativeContext = getNativeContext(context);\n      // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n      var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      _this = _super.call(this, context, false, nativeMediaStreamAudioDestinationNode, null);\n      _this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n      return _this;\n    }\n    _createClass(MediaStreamAudioDestinationNode, [{\n      key: \"stream\",\n      get: function get() {\n        return this._nativeMediaStreamAudioDestinationNode.stream;\n      }\n    }]);\n    return MediaStreamAudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;AAGA,IAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACfC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE;CACjB;AAEV,OAAO,IAAMC,gDAAgD,GAAuD,SAAvGA,gDAAgD,CACzDC,oBAAoB,EACpBC,2CAA2C,EAC3CC,gBAAgB,EAChBC,2BAA2B,EAC3B;EACA;IAAA;IAAA;IAII,yCAAYC,OAAU,EAAEC,OAAoC;MAAA;MAAA;MACxD,IAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAO,CAAC;MAE/C;MACA,IAAID,2BAA2B,CAACG,aAAa,CAAC,EAAE;QAC5C,MAAM,IAAIC,SAAS,EAAE;;MAGzB,IAAMC,aAAa,mCAAQb,eAAe,GAAKU,OAAO,CAAE;MACxD,IAAMI,qCAAqC,GAAGR,2CAA2C,CAACK,aAAa,EAAEE,aAAa,CAAC;MAEvH,0BAAMJ,OAAO,EAAE,KAAK,EAAEK,qCAAqC,EAAyB,IAAI;MAExF,MAAKC,sCAAsC,GAAGD,qCAAqC;MAAC;IACxF;IAAC;MAAA;MAAA,KAED,eAAU;QACN,OAAO,IAAI,CAACC,sCAAsC,CAACC,MAAM;MAC7D;IAAC;IAAA;EAAA,EAtBgGX,oBAAuB;AAwBhI,CAAC","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","createMediaStreamAudioDestinationNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","TypeError","mergedOptions","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\media-stream-audio-destination-node-constructor.ts"],"sourcesContent":["import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
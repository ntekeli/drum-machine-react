{"ast":null,"code":"// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport var createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = function createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor) {\n  return function () {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n    var audioContext = new nativeAudioContextConstructor();\n    try {\n      audioContext.createMediaStreamSource(new MediaStream());\n      return false;\n    } catch (err) {\n      return true;\n    } finally {\n      audioContext.close();\n    }\n  };\n};","map":{"version":3,"mappings":"AAEA;AACA,OAAO,IAAMA,uEAAuE,GAChF,SADSA,uEAAuE,CAC/EC,6BAA6B,EAAI;EAC9B,OAAO,YAAK;IACR,IAAIA,6BAA6B,KAAK,IAAI,EAAE;MACxC,OAAO,KAAK;;IAGhB,IAAMC,YAAY,GAAG,IAAID,6BAA6B,EAAE;IAExD,IAAI;MACAC,YAAY,CAACC,uBAAuB,CAAC,IAAIC,WAAW,EAAE,CAAC;MAEvD,OAAO,KAAK;KACf,CAAC,OAAOC,GAAG,EAAE;MACV,OAAO,IAAI;KACd,SAAS;MACNH,YAAY,CAACI,KAAK,EAAE;;EAE5B,CAAC;AACL,CAAC","names":["createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","nativeAudioContextConstructor","audioContext","createMediaStreamSource","MediaStream","err","close"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\test-media-stream-audio-source-node-media-stream-without-audio-track-support.ts"],"sourcesContent":["import { TTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportFactory } from '../types';\n\n// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport: TTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportFactory =\n    (nativeAudioContextConstructor) => {\n        return () => {\n            if (nativeAudioContextConstructor === null) {\n                return false;\n            }\n\n            const audioContext = new nativeAudioContextConstructor();\n\n            try {\n                audioContext.createMediaStreamSource(new MediaStream());\n\n                return false;\n            } catch (err) {\n                return true;\n            } finally {\n                audioContext.close();\n            }\n        };\n    };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
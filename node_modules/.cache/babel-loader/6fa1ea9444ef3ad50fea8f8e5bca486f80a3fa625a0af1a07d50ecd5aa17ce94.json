{"ast":null,"code":"export var createTestOfflineAudioContextCurrentTimeSupport = function createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor) {\n  return function () {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n    var gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    // Bug #21: Safari does not support promises yet.\n    return new Promise(function (resolve) {\n      nativeOfflineAudioContext.oncomplete = function () {\n        gainNode.disconnect();\n        resolve(nativeOfflineAudioContext.currentTime !== 0);\n      };\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,+CAA+C,GAAsD,SAArGA,+CAA+C,CACxDC,oBAAoB,EACpBC,oCAAoC,EACpC;EACA,OAAO,YAAK;IACR,IAAIA,oCAAoC,KAAK,IAAI,EAAE;MAC/C,OAAOC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;;IAGjC,IAAMC,yBAAyB,GAAG,IAAIH,oCAAoC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IAEvF;IACA,IAAMI,QAAQ,GAAGL,oBAAoB,CAACI,yBAAyB,EAAE;MAC7DE,YAAY,EAAE,CAAC;MACfC,gBAAgB,EAAE,UAAU;MAC5BC,qBAAqB,EAAE,UAAU;MACjCC,IAAI,EAAE;KACT,CAAC;IAEF;IACA,OAAO,IAAIP,OAAO,CAAC,UAACC,OAAO,EAAI;MAC3BC,yBAAyB,CAACM,UAAU,GAAG,YAAK;QACxCL,QAAQ,CAACM,UAAU,EAAE;QAErBR,OAAO,CAACC,yBAAyB,CAACQ,WAAW,KAAK,CAAC,CAAC;MACxD,CAAC;MACDR,yBAAyB,CAACS,cAAc,EAAE;IAC9C,CAAC,CAAC;EACN,CAAC;AACL,CAAC","names":["createTestOfflineAudioContextCurrentTimeSupport","createNativeGainNode","nativeOfflineAudioContextConstructor","Promise","resolve","nativeOfflineAudioContext","gainNode","channelCount","channelCountMode","channelInterpretation","gain","oncomplete","disconnect","currentTime","startRendering"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\test-offline-audio-context-current-time-support.ts"],"sourcesContent":["import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
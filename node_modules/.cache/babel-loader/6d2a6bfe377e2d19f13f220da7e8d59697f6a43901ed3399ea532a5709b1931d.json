{"ast":null,"code":"import _classCallCheck from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport var SignalOperator = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(SignalOperator, _ToneAudioNode);\n  var _super = _createSuper(SignalOperator);\n  function SignalOperator() {\n    _classCallCheck(this, SignalOperator);\n    return _super.call(this, Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n  }\n  _createClass(SignalOperator, [{\n    key: \"connect\",\n    value: function connect(destination) {\n      var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      connectSignal(this, destination, outputNum, inputNum);\n      return this;\n    }\n  }]);\n  return SignalOperator;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;AAAA,SAASA,oBAAoB,QAAQ,uBAAuB;AAC5D,SAAoBC,aAAa,QAA8B,+BAA+B;AAC9F,SAASC,aAAa,QAAQ,UAAU;AAIxC;;;AAGA,WAAsBC,cAAsD;EAAA;EAAA;EAG3E;IAAA;IAAA,yBACOC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAACG,cAAc,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;EAChG;EAAC;IAAA;IAAA,OAED,iBAAQC,WAAsB,EAA6B;MAAA,IAA3BC,SAAS,uEAAG,CAAC;MAAA,IAAEC,QAAQ,uEAAG,CAAC;MAC1DR,aAAa,CAAC,IAAI,EAAEM,WAAW,EAAEC,SAAS,EAAEC,QAAQ,CAAC;MACrD,OAAO,IAAI;IACZ;EAAC;EAAA;AAAA,EAVkFT,aAAsB","names":["optionsFromArguments","ToneAudioNode","connectSignal","SignalOperator","Object","assign","getDefaults","arguments","destination","outputNum","inputNum"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\tone\\Tone\\signal\\SignalOperator.ts"],"sourcesContent":["import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n\nexport type SignalOperatorOptions = ToneAudioNodeOptions;\n\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport abstract class SignalOperator<Options extends SignalOperatorOptions> extends ToneAudioNode<Options> {\n\n\tconstructor(options?: Partial<Options>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
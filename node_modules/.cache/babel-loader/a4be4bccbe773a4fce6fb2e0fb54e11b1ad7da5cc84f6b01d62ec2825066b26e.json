{"ast":null,"code":"import _slicedToArray from \"C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport var createAddPassiveInputConnectionToAudioNode = function createAddPassiveInputConnectionToAudioNode(insertElementInSet) {\n  return function (passiveInputs, input, _ref, ignoreDuplicates) {\n    var _ref2 = _slicedToArray(_ref, 3),\n      source = _ref2[0],\n      output = _ref2[1],\n      eventListener = _ref2[2];\n    var passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n      passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    } else {\n      insertElementInSet(passiveInputConnections, [output, input, eventListener], function (passiveInputConnection) {\n        return passiveInputConnection[0] === output && passiveInputConnection[1] === input;\n      }, ignoreDuplicates);\n    }\n  };\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,0CAA0C,GAAiD,SAA3FA,0CAA0C,CAAkDC,kBAAkB,EAAI;EAC3H,OAAO,UAACC,aAAa,EAAEC,KAAK,QAAmCC,gBAAgB,EAAI;IAAA;MAApDC,MAAM;MAAEC,MAAM;MAAEC,aAAa;IACxD,IAAMC,uBAAuB,GAAGN,aAAa,CAACO,GAAG,CAACJ,MAAM,CAAC;IAEzD,IAAIG,uBAAuB,KAAKE,SAAS,EAAE;MACvCR,aAAa,CAACS,GAAG,CAACN,MAAM,EAAE,IAAIO,GAAG,CAAC,CAAC,CAACN,MAAM,EAAEH,KAAK,EAAEI,aAAa,CAAC,CAAC,CAAC,CAAC;KACvE,MAAM;MACHN,kBAAkB,CACdO,uBAAuB,EACvB,CAACF,MAAM,EAAEH,KAAK,EAAEI,aAAa,CAAC,EAC9B,UAACM,sBAAsB;QAAA,OAAKA,sBAAsB,CAAC,CAAC,CAAC,KAAKP,MAAM,IAAIO,sBAAsB,CAAC,CAAC,CAAC,KAAKV,KAAK;MAAA,GACvGC,gBAAgB,CACnB;;EAET,CAAC;AACL,CAAC","names":["createAddPassiveInputConnectionToAudioNode","insertElementInSet","passiveInputs","input","ignoreDuplicates","source","output","eventListener","passiveInputConnections","get","undefined","set","Set","passiveInputConnection"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\add-passive-input-connection-to-audio-node.ts"],"sourcesContent":["import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
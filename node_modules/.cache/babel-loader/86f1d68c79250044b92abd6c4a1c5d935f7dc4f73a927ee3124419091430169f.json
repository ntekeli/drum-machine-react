{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ntekeli\\\\Desktop\\\\drum-machine\\\\drum-machine\\\\src\\\\components\\\\InstrumentControl.js\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport Knob from \"react-simple-knob\";\nimport { useState, useContext } from \"react\";\nimport VolumeContext from \"../store/VolumeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst idMap = [\"Kick\", \"Snare\", \"ClHat\", \"OpHat\", \"Cymbal\"];\nconst knobStyle = {\n  margin: \"0 auto\",\n  height: \"4rem\",\n  fontFamily: \"Arial\",\n  color: \"#26547cff\"\n};\nconst InstrumentControl = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [mutedState, setMutedState] = useState(true);\n  const [volumeState, setVolumeState] = useState(0);\n  const [pitchState, setPitchState] = useState(1);\n  const [soloState, setSoloState] = useState(false);\n  const controlContext = useContext(VolumeContext);\n  const volumeRotary = level => {\n    setVolumeState(prevState => {\n      if (level === prevState) {\n        return prevState;\n      }\n      controlContext.volumeHandler(volumeState, id);\n      return level;\n    });\n  };\n  const pitchRotary = level => {\n    setPitchState(prevState => {\n      if (level === prevState) {\n        return prevState;\n      }\n      controlContext.pitchHandler(pitchState, id);\n      return level;\n    });\n  };\n  const muteSet = () => {\n    if (!mutedState) {\n      setMutedState(true);\n      controlContext.muteHandler(id);\n    }\n    if (mutedState) {\n      setMutedState(false);\n      controlContext.unmuteHandler(id);\n    }\n  };\n  const soloSet = () => {\n    if (!soloState) {\n      setSoloState(true);\n      controlContext.soloHandler(id);\n    }\n    if (soloState) {\n      setSoloState(false);\n      controlContext.unsoloHandler(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"knobs\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: idMap[id]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: !mutedState ? \"mute-active\" : \"mute\",\n      onClick: muteSet,\n      children: \"Mute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: soloState ? \"solo-active\" : \"solo\",\n      onClick: soloSet,\n      children: \"Solo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Knob, {\n      name: \"Volume\",\n      unit: \"\",\n      defaultPercentage: 0,\n      onChange: volumeRotary,\n      bg: \"black\",\n      fg: \"white\",\n      mouseSpeed: 1,\n      transform: p => parseInt(p * -24),\n      style: knobStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Knob, {\n      name: \"Pitch\",\n      unit: \"\",\n      defaultPercentage: 0.5,\n      onChange: pitchRotary,\n      bg: \"black\",\n      fg: \"white\",\n      mouseSpeed: 1,\n      transform: p => parseInt(p * 20),\n      style: knobStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(InstrumentControl, \"lXm1ghIx5HdPqPj5F42iX4osxCQ=\");\n_c = InstrumentControl;\nexport default InstrumentControl;\nvar _c;\n$RefreshReg$(_c, \"InstrumentControl\");","map":{"version":3,"names":["Knob","useState","useContext","VolumeContext","idMap","knobStyle","margin","height","fontFamily","color","InstrumentControl","id","mutedState","setMutedState","volumeState","setVolumeState","pitchState","setPitchState","soloState","setSoloState","controlContext","volumeRotary","level","prevState","volumeHandler","pitchRotary","pitchHandler","muteSet","muteHandler","unmuteHandler","soloSet","soloHandler","unsoloHandler","p","parseInt"],"sources":["C:/Users/Ntekeli/Desktop/drum-machine/drum-machine/src/components/InstrumentControl.js"],"sourcesContent":["import \"../App.css\";\r\nimport Knob from \"react-simple-knob\";\r\nimport { useState, useContext } from \"react\";\r\nimport VolumeContext from \"../store/VolumeContext\";\r\n\r\nconst idMap = [\"Kick\", \"Snare\", \"ClHat\", \"OpHat\", \"Cymbal\"];\r\nconst knobStyle = {\r\n  margin: \"0 auto\",\r\n  height: \"4rem\",\r\n  fontFamily: \"Arial\",\r\n  color: \"#26547cff\",\r\n};\r\n\r\nconst InstrumentControl = ({ id }) => {\r\n  const [mutedState, setMutedState] = useState(true);\r\n  const [volumeState, setVolumeState] = useState(0);\r\n  const [pitchState, setPitchState] = useState(1);\r\n  const [soloState, setSoloState] = useState(false);\r\n\r\n  const controlContext = useContext(VolumeContext);\r\n\r\n  const volumeRotary = (level) => {\r\n    setVolumeState((prevState) => {\r\n      if (level === prevState) {\r\n        return prevState;\r\n      }\r\n      controlContext.volumeHandler(volumeState, id);\r\n      return level;\r\n    });\r\n  };\r\n  const pitchRotary = (level) => {\r\n    setPitchState((prevState) => {\r\n      if (level === prevState) {\r\n        return prevState;\r\n      }\r\n      controlContext.pitchHandler(pitchState, id);\r\n      return level;\r\n    });\r\n  };\r\n  const muteSet = () => {\r\n    if (!mutedState) {\r\n      setMutedState(true);\r\n      controlContext.muteHandler(id);\r\n    }\r\n    if (mutedState) {\r\n      setMutedState(false);\r\n      controlContext.unmuteHandler(id);\r\n    }\r\n  };\r\n  const soloSet = () => {\r\n    if (!soloState) {\r\n      setSoloState(true);\r\n      controlContext.soloHandler(id);\r\n    }\r\n    if (soloState) {\r\n      setSoloState(false);\r\n      controlContext.unsoloHandler(id);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"knobs\">\r\n      <p>{idMap[id]}</p>\r\n      <button\r\n        className={!mutedState ? \"mute-active\" : \"mute\"}\r\n        onClick={muteSet}\r\n      >\r\n        Mute\r\n      </button>\r\n      <button \r\n        className={soloState ? \"solo-active\" : \"solo\"}\r\n      onClick={soloSet}>Solo</button>\r\n      <Knob\r\n        name=\"Volume\"\r\n        unit=\"\"\r\n        defaultPercentage={0}\r\n        onChange={volumeRotary}\r\n        bg=\"black\"\r\n        fg=\"white\"\r\n        mouseSpeed={1}\r\n        transform={(p) => parseInt(p * -24)}\r\n        style={knobStyle}\r\n      />\r\n      <Knob\r\n        name=\"Pitch\"\r\n        unit=\"\"\r\n        defaultPercentage={0.5}\r\n        onChange={pitchRotary}\r\n        bg=\"black\"\r\n        fg=\"white\"\r\n        mouseSpeed={1}\r\n        transform={(p) => parseInt(p * 20)}\r\n        style={knobStyle}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstrumentControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
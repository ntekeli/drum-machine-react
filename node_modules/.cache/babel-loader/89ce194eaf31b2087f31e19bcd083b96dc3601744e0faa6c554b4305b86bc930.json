{"ast":null,"code":"export var createCacheTestResult = function createCacheTestResult(ongoingTests, testResults) {\n  return function (tester, test) {\n    var cachedTestResult = testResults.get(tester);\n    if (cachedTestResult !== undefined) {\n      return cachedTestResult;\n    }\n    var ongoingTest = ongoingTests.get(tester);\n    if (ongoingTest !== undefined) {\n      return ongoingTest;\n    }\n    try {\n      var synchronousTestResult = test();\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(function () {\n          return false;\n        }).then(function (finalTestResult) {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch (_unused) {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,qBAAqB,GAA4B,SAAjDA,qBAAqB,CAA6BC,YAAY,EAAEC,WAAW,EAAI;EACxF,OAAO,UAACC,MAAM,EAAEC,IAAI,EAAI;IACpB,IAAMC,gBAAgB,GAAGH,WAAW,CAACI,GAAG,CAACH,MAAM,CAAC;IAEhD,IAAIE,gBAAgB,KAAKE,SAAS,EAAE;MAChC,OAAOF,gBAAgB;;IAG3B,IAAMG,WAAW,GAAGP,YAAY,CAACK,GAAG,CAACH,MAAM,CAAC;IAE5C,IAAIK,WAAW,KAAKD,SAAS,EAAE;MAC3B,OAAOC,WAAW;;IAGtB,IAAI;MACA,IAAMC,qBAAqB,GAAGL,IAAI,EAAE;MAEpC,IAAIK,qBAAqB,YAAYC,OAAO,EAAE;QAC1CT,YAAY,CAACU,GAAG,CAACR,MAAM,EAAEM,qBAAqB,CAAC;QAE/C,OAAOA,qBAAqB,CACvBG,KAAK,CAAC;UAAA,OAAM,KAAK;QAAA,EAAC,CAClBC,IAAI,CAAC,UAACC,eAAe,EAAI;UACtBb,YAAY,CAACc,MAAM,CAACZ,MAAM,CAAC;UAC3BD,WAAW,CAACS,GAAG,CAACR,MAAM,EAAEW,eAAe,CAAC;UAExC,OAAOA,eAAe;QAC1B,CAAC,CAAC;;MAGVZ,WAAW,CAACS,GAAG,CAACR,MAAM,EAAEM,qBAAqB,CAAC;MAE9C,OAAOA,qBAAqB;KAC/B,CAAC,gBAAM;MACJP,WAAW,CAACS,GAAG,CAACR,MAAM,EAAE,KAAK,CAAC;MAE9B,OAAO,KAAK;;EAEpB,CAAC;AACL,CAAC","names":["createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","get","undefined","ongoingTest","synchronousTestResult","Promise","set","catch","then","finalTestResult","delete"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\cache-test-result.ts"],"sourcesContent":["import { TCacheTestResultFactory } from '../types';\n\nexport const createCacheTestResult: TCacheTestResultFactory = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n\n        const ongoingTest = ongoingTests.get(tester);\n\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n\n        try {\n            const synchronousTestResult = test();\n\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                        ongoingTests.delete(tester);\n                        testResults.set(tester, finalTestResult);\n\n                        return finalTestResult;\n                    });\n            }\n\n            testResults.set(tester, synchronousTestResult);\n\n            return synchronousTestResult;\n        } catch {\n            testResults.set(tester, false);\n\n            return false;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var createSetActiveAudioWorkletNodeInputs = function createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore) {\n  return function (nativeAudioWorkletNode, activeInputs) {\n    activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,qCAAqC,GAA4C,SAAjFA,qCAAqC,CAA6CC,iCAAiC,EAAI;EAChI,OAAO,UAACC,sBAAsB,EAAEC,YAAY,EAAI;IAC5CF,iCAAiC,CAACG,GAAG,CAACF,sBAAsB,EAAEC,YAAY,CAAC;EAC/E,CAAC;AACL,CAAC","names":["createSetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","nativeAudioWorkletNode","activeInputs","set"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\set-active-audio-worklet-node-inputs.ts"],"sourcesContent":["import { TSetActiveAudioWorkletNodeInputsFactory } from '../types';\n\nexport const createSetActiveAudioWorkletNodeInputs: TSetActiveAudioWorkletNodeInputsFactory = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport var wrapIIRFilterNodeGetFrequencyResponseMethod = function wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode) {\n  nativeIIRFilterNode.getFrequencyResponse = function (getFrequencyResponse) {\n    return function (frequencyHz, magResponse, phaseResponse) {\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n    };\n  }(nativeIIRFilterNode.getFrequencyResponse);\n};","map":{"version":3,"mappings":"AAAA,SAASA,wBAAwB,QAAQ,mCAAmC;AAG5E,OAAO,IAAMC,2CAA2C,GAAG,SAA9CA,2CAA2C,CAAIC,mBAAyC,EAAU;EAC3GA,mBAAmB,CAACC,oBAAoB,GAAI,UAACA,oBAAoB,EAAI;IACjE,OAAO,UAACC,WAAyB,EAAEC,WAAyB,EAAEC,aAA2B,EAAI;MACzF,IAAIF,WAAW,CAACG,MAAM,KAAKF,WAAW,CAACE,MAAM,IAAIF,WAAW,CAACE,MAAM,KAAKD,aAAa,CAACC,MAAM,EAAE;QAC1F,MAAMP,wBAAwB,EAAE;;MAGpC,OAAOG,oBAAoB,CAACK,IAAI,CAACN,mBAAmB,EAAEE,WAAW,EAAEC,WAAW,EAAEC,aAAa,CAAC;IAClG,CAAC;EACL,CAAC,CAAEJ,mBAAmB,CAACC,oBAAoB,CAAC;AAChD,CAAC","names":["createInvalidAccessError","wrapIIRFilterNodeGetFrequencyResponseMethod","nativeIIRFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","length","call"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\wrap-iir-filter-node-get-frequency-response-method.ts"],"sourcesContent":["import { createInvalidAccessError } from '../factories/invalid-access-error';\nimport { TNativeIIRFilterNode } from '../types';\n\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode: TNativeIIRFilterNode): void => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
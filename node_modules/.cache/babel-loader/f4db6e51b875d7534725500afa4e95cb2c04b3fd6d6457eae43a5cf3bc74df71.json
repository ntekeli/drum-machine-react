{"ast":null,"code":"import { pickElementFromSet } from './pick-element-from-set';\nexport var deleteActiveInputConnectionToAudioParam = function deleteActiveInputConnectionToAudioParam(activeInputs, source, output) {\n  return pickElementFromSet(activeInputs, function (activeInputConnection) {\n    return activeInputConnection[0] === source && activeInputConnection[1] === output;\n  });\n};","map":{"version":3,"mappings":"AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAO,IAAMC,uCAAuC,GAAG,SAA1CA,uCAAuC,CAChDC,YAA4C,EAC5CC,MAAqB,EACrBC,MAAc,EACd;EACA,OAAOJ,kBAAkB,CACrBE,YAAY,EACZ,UAACG,qBAAqB;IAAA,OAAKA,qBAAqB,CAAC,CAAC,CAAC,KAAKF,MAAM,IAAIE,qBAAqB,CAAC,CAAC,CAAC,KAAKD,MAAM;EAAA,EACxG;AACL,CAAC","names":["pickElementFromSet","deleteActiveInputConnectionToAudioParam","activeInputs","source","output","activeInputConnection"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\helpers\\delete-active-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
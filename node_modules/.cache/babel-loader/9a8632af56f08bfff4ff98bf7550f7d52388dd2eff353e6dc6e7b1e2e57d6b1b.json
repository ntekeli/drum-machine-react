{"ast":null,"code":"export var createNativePeriodicWaveFactory = function createNativePeriodicWaveFactory(createIndexSizeError) {\n  return function (nativeContext, _ref) {\n    var disableNormalization = _ref.disableNormalization,\n      imag = _ref.imag,\n      real = _ref.real;\n    // Bug #180: Safari does not allow to use ordinary arrays.\n    var convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n    var convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n    var nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, {\n      disableNormalization: disableNormalization\n    });\n    // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n    if (Array.from(imag).length < 2) {\n      throw createIndexSizeError();\n    }\n    return nativePeriodicWave;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,+BAA+B,GAAsC,SAArEA,+BAA+B,CAAuCC,oBAAoB,EAAI;EACvG,OAAO,UAACC,aAAa,QAA0C;IAAA,IAAtCC,oBAAoB,QAApBA,oBAAoB;MAAEC,IAAI,QAAJA,IAAI;MAAEC,IAAI,QAAJA,IAAI;IACrD;IACA,IAAMC,aAAa,GAAGF,IAAI,YAAYG,YAAY,GAAGH,IAAI,GAAG,IAAIG,YAAY,CAACH,IAAI,CAAC;IAClF,IAAMI,aAAa,GAAGH,IAAI,YAAYE,YAAY,GAAGF,IAAI,GAAG,IAAIE,YAAY,CAACF,IAAI,CAAC;IAElF,IAAMI,kBAAkB,GAAGP,aAAa,CAACQ,kBAAkB,CAACF,aAAa,EAAEF,aAAa,EAAE;MAAEH,oBAAoB,EAApBA;IAAoB,CAAE,CAAC;IAEnH;IACA,IAAIQ,KAAK,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMZ,oBAAoB,EAAE;;IAGhC,OAAOQ,kBAAkB;EAC7B,CAAC;AACL,CAAC","names":["createNativePeriodicWaveFactory","createIndexSizeError","nativeContext","disableNormalization","imag","real","convertedImag","Float32Array","convertedReal","nativePeriodicWave","createPeriodicWave","Array","from","length"],"sources":["C:\\Users\\Ntekeli\\Desktop\\drum-machine\\drum-machine\\node_modules\\standardized-audio-context\\src\\factories\\native-periodic-wave-factory.ts"],"sourcesContent":["import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}